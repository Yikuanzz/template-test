services:
  mysql:
    image: mysql:8.0
    container_name: go-template-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: go_template_db
      MYSQL_USER: template_user
      MYSQL_PASSWORD: template_pass
    ports:
      - "3406:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - go-template-network

  redis:
    image: redis:7-alpine
    container_name: go-template-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - go-template-network

  etcd:
    image: registry.cn-hangzhou.aliyuncs.com/google_containers/etcd:v3.5.9
    container_name: go-template-etcd
    restart: unless-stopped
    environment:
      - ETCD_NAME=etcd-server
      - ETCD_DATA_DIR=/etcd-data
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd:2380
      - ETCD_INITIAL_CLUSTER=etcd-server=http://etcd:2380
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster
      - ETCD_INITIAL_CLUSTER_STATE=new
    ports:
      - "2379:2379"
      - "2380:2380"
    volumes:
      - etcd_data:/etcd-data
    networks:
      - go-template-network

  # ================== 监控组件 ==================
  
  prometheus:
    image: prom/prometheus:latest
    container_name: go-template-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - go-template-network

  grafana:
    image: grafana/grafana:latest
    container_name: go-template-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - go-template-network

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: go-template-jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # Jaeger collector HTTP
      - "14250:14250"  # Jaeger collector gRPC
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - go-template-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  etcd_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  go-template-network:
    driver: bridge
